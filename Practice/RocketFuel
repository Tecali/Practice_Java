/* package whatever; // don't place package name! */


/* 

    1
  2   3
 6   4 5
    
[[1], [2,3], [6,4,5]]

*/


import java.io.*;

class myCode
{
    private List<List<Integer>> result = new ArrayList<List<Integer>>();

    public static List<List<Integer>> getIntsInDepth(List<List<Integer>> roots){
        List<Integer> listNodes = new ArrayList<Integer>();
        for(List<Integer> root : roots){
        if(root!= null && result.size() == 0){
            listNodes.add(root);
            result.add(listNodes);
        }
        
        //listNodes = null;
            Integer left = root.get(1);
        if(left != null){
            listNodes.add(left);
            
           // getIntsInDepth(root.left);
           
            
        }
             Integer right = root.get(2);
        if(right != null){
             //getIntsInDepth(root.right);
            listNodes.add(right);
        
         }
        
         result.add(listNodes);
        if(left != null){
            //listNodes.add(root.left);
            
            getIntsInDepth(left);
           
            
        }
        if(right != null){
             getIntsInDepth(right);
           // listNodes.add(root.right);
        
         }
        }
        return result;
    
}

class BinaryTree{
    Integer root;    
    Integer left, right;
    
    public BinaryTree(){
        
    }
      public BinaryTree(Integer n, Integer left, Integer right){
          this.root = n;
          this.left = left;
          this.right = right;
        
    }
    
    public Integer getRight(){
        return right;
    }
    public Integer getLeft(){
        return left;
    }
    
    public Integer getRoot(){
        return root;
    }
    
    public static void main(String[] args){
        List<Integer> ins = new ArrayList<Integer>();
        BinaryTree input1 = new BinaryTree(1,2,3);
        BinaryTree input2 = new BinaryTree(2,6,null);
        BinaryTree input3 = new BinaryTree(3,4,5);
        ins.add(input1);
        ins.add(input2);
        ins.add(input3);
        getIntsInDepth(ins);
        
    }
    
}
